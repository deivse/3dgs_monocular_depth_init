{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "(gdb) Attach",
            "type": "cppdbg",
            "request": "attach",
            "program": "/root/miniforge3/envs/gs_init_compare/bin/python",
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "make_results_table",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/results_processing_scripts/make_results_table.py",
            "console": "integratedTerminal",
            "args": [
                "--dataset=mipnerf360",
                "--step=30000",
                "all_scene_average",
                "psnr",
                "ssim"
            ],
            "cwd": "${workspaceFolder}/",
        },
        {
            "name": "nerfbaselines_evaluator",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/nerfbaselines_evaluator.py",
            "console": "integratedTerminal",
            "args": [
                "--configs",
                "strategy={default, mcmc} --init-type={monocular_depth} --mdi.predictor={metric3d} --mdi.depth-alignment-strategy={ransac} --mdi.subsample-factor={adaptive} --mdi.postprocess.outlier_removal=[ALL]",
                "--run-label=test",
                // "--max-steps=100",
                // "--eval-frequency=50",
                // "--scenes=mipnerf360/bonsai",
            ],
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "editast",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/test_edit_ast.py",
            "console": "integratedTerminal",
            "args": [],
            "cwd": "${workspaceFolder}/gs_init_compare/",
        },
        {
            "name": "nerfbaselines install",
            "type": "debugpy",
            "request": "launch",
            "module": "nerfbaselines",
            "args": [
                "install",
                "--spec=${workspaceFolder}/gs_init_compare/nerfbaselines_integration/method_spec.py",
            ],
            "justMyCode": false
        },
        {
            "name": "nerfbaselines viewer",
            "type": "debugpy",
            "request": "launch",
            "module": "nerfbaselines",
            "args": [
                "viewer",
                "--checkpoint=checkpoint-3000",
                "--data=external://mipnerf360/garden",
                "--backend=python",
            ],
            "justMyCode": false,
            "cwd": "${workspaceFolder}/tmp_nerfbaselines_output",
        },
        {
            "name": "nerfbaselines train",
            "type": "debugpy",
            "request": "launch",
            "module": "nerfbaselines",
            "args": [
                "train",
                "--backend=python",
                "--method=gs-init-compare",
                "--output=tmp_nerfbaselines_debug",
                "--presets=metric3d_depth_downsample_10_noise_0.05",
                "--data=external://mipnerf360/garden",
            ],
            "env": {
                "NERFBASELINES_REGISTER": "${workspaceFolder}/gs_init_compare/nerfbaselines_integration/method_spec.py"
            },
            "guiEventLoop": "none",
            "justMyCode": false
        },
        {
            "name": "gsplat trainer metric3d vit large",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/gs_init_compare/trainer.py",
            "env": {
                "CUDA_VISIBLE_DEVICES": "0"
            },
            "args": [
                "default",
                "--init-type=monocular_depth",
                "--mdi.predictor=metric3d",
                "--mdi.metric3d.preset=vit_large",
                "--data-dir=data/360_v2/garden",
                "--mdi.pts-output-dir=mono_depth_init_ply",
                "--mdi.subsample-factor=adaptive",
                "--mdi.pts-only"
                // "--mdi.pts-output-per-image",
            ],
            "cwd": "${workspaceFolder}/gs_init_compare/",
            "console": "integratedTerminal",
            "justMyCode": false,
            "guiEventLoop": "none",
        },
        {
            "name": "(gdb) gsplat trainer metric3d vit large",
            "type": "cppdbg",
            "request": "launch",
            "program": "/root/miniforge3/envs/gs_init_compare/bin/python",
            "args": [
                "${workspaceFolder}/gs_init_compare/trainer.py",
                "default",
                "--init-type=monocular_depth",
                "--mdi.predictor=metric3d",
                "--mdi.metric3d.preset=vit_large",
                "--data-dir=data/360_v2/garden",
                "--mdi.pts-output-dir=mono_depth_init_ply",
                "--mdi.subsample-factor=adaptive",
                "--mdi.pts-only"
                // "--mdi.pts-output-per-image",
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}/gs_init_compare/",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "Python Debugger: Attach using Process Id",
            "type": "debugpy",
            "request": "attach",
            "processId": "${command:pickProcess}"
        },
        {
            "name": "gsplat trainer MCMC",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/gs_init_compare/trainer.py",
            "env": {
                "CUDA_VISIBLE_DEVICES": "0"
            },
            "args": [
                "mcmc",
                "--strategy.cap-max=5979198",
                "--data-dir=/root/.cache/nerfbaselines/datasets/mipnerf360/garden/"
            ],
            "cwd": "${workspaceFolder}/gs_init_compare/",
            "console": "integratedTerminal",
            "justMyCode": false,
            "guiEventLoop": "none",
        },
    ],
    "compounds": [
        {
            "name": "Trainer + C++ Debug",
            "configurations": [
                "gsplat trainer metric3d vit large",
                "(gdb) Attach"
            ]
        }
    ]
}
